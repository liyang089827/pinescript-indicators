//@version=6
indicator("Storing and using data from previous bars demo")

//@variable The one-bar price return, based on the current and *previous* bars' `close` values.
//          This variable's final value on each bar automatically becomes part of the internal time series. 
float priceReturn = ta.change(close, 1) / close[1]

//@variable Is `color.teal` if the `priceReturn` value is above the value on the previous bar; `color.maroon` otherwise. 
color returnColor = priceReturn > priceReturn[1] ? color.teal : color.maroon

// Plot the current `priceReturn` value as a column, colored using the value of `returnColor`. 
plot(priceReturn, "Price return", returnColor, 1, plot.style_columns)
